name: CI/CD Tailfront

on:
  push:
    branches: [ "main" ]

env:
  # Можно задать repo variable DOCKER_IMAGE_NAME; иначе возьмётся 'tailfront'
  IMAGE_NAME: ${{ vars.DOCKER_IMAGE_NAME || 'tailfront' }}
  K8S_NAMESPACE: web

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push (latest + sha)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
        - name: Ensure target dir under /opt
          uses: appleboy/ssh-action@v1.2.0
          with:
            host: ${{ secrets.VPS_HOST }}
            username: ${{ secrets.VPS_USER }}
            key: ${{ secrets.VPS_SSH_KEY }}
            script: |
             set -e
             sudo mkdir -p /opt/${{ secrets.VPS_USER }}/tailfront
             # права именно на конечную папку, чтобы scp мог туда писать
             sudo chown -R ${{ secrets.VPS_USER }}:${{ secrets.VPS_USER }} /opt/${{ secrets.VPS_USER }}/tailfront
             ls -ld /opt/${{ secrets.VPS_USER }} /opt/${{ secrets.VPS_USER }}/tailfront

        - name: Copy k8s manifests to VPS
          uses: appleboy/scp-action@v0.1.7
          with:
            host: ${{ secrets.VPS_HOST }}
            username: ${{ secrets.VPS_USER }}
            key: ${{ secrets.VPS_SSH_KEY }}
            source: "k3s/*"
            target: "/opt/${{ secrets.VPS_USER }}/tailfront"   # без завершающего /
            debug: true

        - name: Apply k8s manifests and rollout new image
          uses: appleboy/ssh-action@v1.2.0
          with:
            host: ${{ secrets.VPS_HOST }}
            username: ${{ secrets.VPS_USER }}
            key: ${{ secrets.VPS_SSH_KEY }}
            script: |
                set -e
                cd /opt/${{ secrets.VPS_USER }}/tailfront
                # быстрые проверки окружения
                which tar || echo "tar not found"
                which kubectl || echo "kubectl not found"
                ls -la

                NAMESPACE="web"
                IMAGE_REPO="${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}"
                SHA="${{ github.sha }}"

                kubectl get ns "$NAMESPACE" >/dev/null 2>&1 || kubectl create namespace "$NAMESPACE"

                kubectl apply -f namespace.yaml || true
                kubectl -n "$NAMESPACE" apply -f deployment.yaml
                kubectl -n "$NAMESPACE" apply -f service.yaml
                kubectl -n "$NAMESPACE" apply -f ingress.yaml

                kubectl -n "$NAMESPACE" set image deploy/tailfront tailfront-container="${IMAGE_REPO}:${SHA}"
                kubectl -n "$NAMESPACE" rollout status deploy/tailfront
                kubectl -n "$NAMESPACE" get deploy,po,svc,ing -o wide
